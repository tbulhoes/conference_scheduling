
# BaPCod's parameters file
#
# Variables with true or false value are boolean
# Variable with decimal or in scientific form are double or float (if mentioned)
# Other numeric variable are int or long int (if mentioned).
# One character is a character
# More than one alpha numeric characters could be a string
# Multiple tockens in an option are separated by a comma

# -- Output level

DEFAULTPRINTLEVEL = 0

# -- RCSP parameters

RCSPdynamicNGmode = 0
RCSPuseDSSRInMode = 0 

RCSPapplyReducedCostFixing = 2
RCSPuseBidirectionalSearch = 1

RCSPmaxNumOfColsPerIteration = 50
RCSPmaxNumOfColsPerExactIteration = 300

RCSPrankOneCutsMaxNumRows = 3
RCSPrankOneCutsMaxNumPerRound = 50
RCSPrankOneCutsArcMemory = true

RCSPstopCutGenTimeThresholdInPricing = 10
RCSPhardTimeThresholdInPricing = 20

RCSPmaxNumOfLabelsInEnumeration = 0
RCSPmaxNumOfEnumeratedSolutions = 10000000
RCSPmaxNumOfEnumSolutionsForMIP = 15000

RCSPcheckDominInOtherBuckets = false
RCSPallowRoutesWithSameVerticesSet = true
RCSPuseCompletionBoundsInPricing = 0 
RCSPuseComplBoundsInRedCostFixing = 0 
RCSPuseExactComplBoundsInEnumeration = false
RCSPdynamicBucketSteps = 0


# -- Limits

GlobalTimeLimitInTick = 360000000 # 100 hour
MaxNbOfBBtreeNodeTreated = 10000

# -- Solver

solverName = CPLEX_SOLVER

# -- Solution mode

ovfSolMode = 0 # no original formulation will be created and solved
masterSolMode = 2 # master will be solved by the LP solver
SolverSelectForMast = a # automatic LP solver is used
MipSolverMultiThread = 1

# -- Master initialisation

UseInitialPrimalHeur = false
mastInitMode = 3 # master will be initialized with the local artificial variables only
ApplyPreprocessing = true

#Tailing off parameters
CutTailingOffThreshold = 0.02
CutTailingOffCounterThreshold = 3

# -- Column generation and management

MaxNbOfStagesInColGenProcedure = 1
colGenSubProbSolMode = 3  # pricing problem will be solved by the MIP solver
GenerateProperColumns = false
ColumnCleanupThreshold  =  10000
MultiColGeneration = true
TerminateCgWhenRoundedDbCannotImprove = false

Search4NegRedCostColInInactivePool = false
InsertAllGeneratedColumnsInFormRatherThanInPool = true
InsertNewNonNegColumnsDirectlyInFormRatherThanInPool = false

ReducedCostFixingThreshold = 1.0

# -- Cut Generation

UseMasterCuttingPlanes = true
MasterCuttingPlanesDepthLimit = 1000
BapCodCutViolationTolerance = 0.02
MaxNbOfCutGeneratedAtEachIter = 1000000
CutDynamicPriorityLevel = false
CutCleanupThreshold =  1

# -- Branching
# -- Strong Branching by phases

# Phase not used : empty line
# Exact phase : true <max # of candidates> <tree size ratio to stop>
# Non-exact phase : false <max # of candidates> <tree size ratio of parent to stop> <max # col.gen.iters.> <min.level.sp.restriction>
#                         <min # cut rounds> <max # cut rounds> <use red.cost.fix.enumeration> <log print frequency>
StrongBranchingPhaseOne = false 50 1.0 0
StrongBranchingPhaseTwo = false 3 0.1 50 1 0 0 false 0
StrongBranchingPhaseThree = true 1 1.0

#ApplyStrongBranchingEvaluation = true
#StrongBranchingParameter4MaxNbOfCandidates = 10

# -- Heuristics

UseDivingHeur = false
UseRestrictedMasterIpHeur = false

# -- Stabilization

colGenStabilizationFunctionType = 0 # default = none = 0, box step = 1, 3-piece = 2, 5-piece = 3, bundle = 4
StabilFuncKappa = 1 # initial curvature of the penalty function (default is 1)

colGenDualPriceSmoothingAlphaFactor = 1 # dual price smoothing is not used
colGenDualPriceSmoothingBetaFactor  = 0 # additional directional dual price smoothing is not used

# The selected fields of cpu times (must at least include total cpu time= bcTimeMain);
timeKeySet = bcTimeNow bcTimeMastMPsol bcTimeMastLp bcTimeSpSol bcTimeColGen bcTimeSpOracle bcTimeSepFracSol bcTimeCutSeparation bcTimeAddCutToMaster bcTimeBuildMembership bcTimeInsertMastCol bcTimeSetMast bcTimeSpReset bcTimeSpUpdateProb bcTimeResetProbConstr bcTimeResetProbVar bcTimeFirstMasterLpIterate bcTimeMain

# bcTimeMastMPsol = total time spent at solving Master Math Programming Formulation;
# bcTimeSpSol = total time spent at solving SubProblems including solution recording;
# bcTimeOvfMPsol = total time spent at solving original Math Programming Formulation;
# bcTimeMain = overall total time;

# The selected fields in sorted order (in any case lines start with prName and ends with total cpu time;
outputKeyVector= bcCountNodeProc bcRecRootDb bcRecBestDb bcRecBestInc bcCountMastSol bcCountSpSol bcCountCol bcMaxNbColInMastLp bcTimeMastMPsol bcTimeSpSol

# bcCountNodeProc = number of BaP processed
# bcRecRootDb = Dual Bound on exiting root node;
# bcRecBestDb = Best Dual Bound on exiting program;
# bcRecBestInc = Best Incumbent solution on exiting program;
# bcCountMastSol = number of master LPs that have been solved
# bcCountSpSol = number of SubProblems that have been solved
# bcCountCol = number of columns generated dynamically
# bcMaxNbColInMastLp = maximum number of columns in the master LP at any node of the Branch-and-Price procedure
